{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","document","querySelector"],"mappings":"yNAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACC,qCACC,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,YCSYC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACnC,OACC,mCACED,EAAQE,KAAI,SAACC,GAAD,OACZ,wBAAQC,KAAK,SAASC,KAAMF,EAAQG,QAASL,EAA7C,SACEE,UCOSI,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCMWC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,4BAAIA,OCAcC,E,4MACpBC,MAAQ,CACPnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNkB,mBAAqB,WAAO,IAAD,EACK,EAAKD,MAEpC,OAH0B,EAClBnB,KADkB,EACZC,QADY,EACHC,K,EAKxBmB,gCAAkC,WACjC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdnB,KAC0BsB,EAClC,OAAOE,KAAKC,MAAMF,I,EAGnBhB,gBAAkB,SAACmB,GAClB,IAAMf,EAAOe,EAAEC,OAAOhB,KACtB,EAAKiB,UAAS,SAACC,GAAD,sBACZlB,EAAOkB,EAAUlB,GAAQ,O,4CAG5B,WAAU,IAAD,EACuBmB,KAAKX,MAA5BnB,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACjBC,EAAQ2B,KAAKV,qBACbhB,EAAqB0B,KAAKT,kCAE1BU,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACC,qCACC,cAAC,EAAD,CAASL,MAAM,wBAAf,SACC,cAAC,EAAD,CAAiBR,QAASyB,EAAQxB,gBAAiBuB,KAAKvB,oBAG9C,IAAVJ,EACA,cAAC,EAAD,CAAcc,QAAQ,sBAEtB,cAAC,EAAD,CAASH,MAAM,aAAf,SACC,cAAC,EAAD,CACCd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA/CM8B,aCFjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.10ac7a1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Good:{good}</p>\r\n\t\t\t<p>Neutral:{neutral}</p>\r\n\t\t\t<p>Bad:{bad}</p>\r\n\t\t\t<p>Total:{total}</p>\r\n\t\t\t<p>Positive feedback:{positivePercentage} %</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{options.map((option) => (\r\n\t\t\t\t<button type=\"button\" name={option} onClick={onLeaveFeedback}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</button>\r\n            ))}\r\n\t\t</>\r\n\t);\r\n};\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.array.isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nexport default class App extends Component {\n\tstate = {\n\t\tgood: 0,\n\t\tneutral: 0,\n\t\tbad: 0\n\t};\n\n\tcountTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst result = good + neutral + bad;\n\t\treturn result;\n\t};\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tconst result = this.countTotalFeedback();\n\t\tconst { good } = this.state;\n\t\tconst percentage = (good * 100) / result;\n\t\treturn Math.round(percentage);\n\t};\n\n\tonLeaveFeedback = (e) => {\n\t\tconst name = e.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n\t};\n\trender() {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\n\t\tconst objKey = Object.keys(this.state);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Section title=\"Please leave feedback\">\n\t\t\t\t\t<FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\n\t\t\t\t</Section>\n\n\t\t\t\t{total === 0 ? (\n\t\t\t\t\t<Notification message=\"No feedback given\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Section title=\"Statistics\">\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}